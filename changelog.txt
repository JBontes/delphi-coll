========================
=  Major Release: 1.1  =
========================
    * Implement T(Object)LinkedDictionary<TKey, TValue> that used a hash/linked list approach.
      Guarantees insert order preservation of elements.
    * Implement T(Object)LinkedSet<T> that used a hash/linked list approach.
      Guarantees insert order preservation of elements.                                        
    * Add ISortedSet<T> interface now implemented by TSortedSet<T>.
    * Implement T(Object)SortedLinkedList<T>. This class uses a linked list to store its elements. It also
      implements IList interface and provides access to the index based functions (slow).
    * Optimized TList<T>.Add(collection) a lot. Should be a big boost to all dependant functions.
    * TLinkedStack<T> now uses an internal linked list and not the much "loved" TLinkedList class. This should
      bring quite some speed improvements into the game.
    * TLinkedQueue<T> now uses an internal linked list and not the much "loved" TLinkedList class. This should
      bring quite some speed improvements into the game.
    * TLinkedList<T> was completely rewritten. It's no longer .NET-like, it looks just like a simple TList<T> but
      stores its elements in a linked list. A lot of indexing methods are supported but are dead slow!
    * Fixed TSortedList.Copy to also copy the ascending/descending flag from the original list.
    * New GroupedBy<T>() extended operation and IEnexGroupingCollection<TKey, T>.
    * Removed IUnorderedList<T>. All lists implement IList<T> now (that includes Insert!).
    * IList<T> now includes Insert().
    * Renamed IOrderedList<T> into ISortedList<T>.
    * TArraySet<T> is not a sorted set. It's been optimized.
    * TSortedList<T>'s methods have been optimized to use binary search.
    * Updated multiple tests. Add missing test cases for TArraySet<T>

========================
= Minor Release: 1.0.1 =
======================== 

    * Do not expose AreEqual, Compare and GetHashCode in TRules<T>.
    * Add protected methods ElementsAreEqual, CompareElements, GetElementHashCode
      to TEnexCollection<T>.
    * Add protected methods KeysAreEqual, CompareKeys, GetKeyHashCode
      to TEnexAssociativeCollection<TKey, TValue>.
    * Add protected methods ValuessAreEqual, CompareValues, GetValueHashCode
      to TEnexAssociativeCollection<TKey, TValue>.
    * Do not use ElementRules, KeyRules and ValueRules in code directly.
    * Define EArgumentNilException if RTL version is less than 22 (2010).
    * Fixed grammar and spelling errors (by Denisa Ilascu).
 
========================
=  Major Release: 1.0  =
======================== 

    * First public version!
    * The following units are provided
      + Collections.Base
      + Collections.Lists
      + Collections.Queues
      + Collections.Stacks
      + Collections.Sets
      + Collections.Dictionaries
      + Collections.Bags
      + Collections.MultiMaps
      + Collections.BidiMaps
    * Documentation is up
    * Everything is tested.